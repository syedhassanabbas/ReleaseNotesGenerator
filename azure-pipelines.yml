name: $(Major).$(Minor).$(rev:r) 

resources:
  repositories:
    - repository: ReleaseNotesGenerator
      type: github
      endpoint: syedhassanabbas
      name: syedhassanabbas/ReleaseNotesGenerator
      ref: refs/heads/main     

trigger:
- main

pool: Default

stages:

  - stage: build   
    jobs:
      - job: buildjob        
        steps:
          - checkout: ReleaseNotesGenerator
          - powershell: |
              Write-Host "Show all folder content"
              Get-ChildItem -Path $(Build.SourcesDirectory)\*.* -Recurse -Force
            errorActionPreference: continue
            displayName: 'PowerShell Script List folder structure'
            continueOnError: true
          - task: XplatGenerateReleaseNotes@4
            displayName: 'Release notes with template'
            inputs:
              templatefile: '$(System.DefaultWorkingDirectory)/build-handlebars-template-detailed.md'
              outputfile: '$(System.DefaultWorkingDirectory)/relasenotes.md'
              outputVariableName: 'outputvar'
              templateLocation: 'File'
              checkstages=false
          - publish: '$(System.DefaultWorkingDirectory)/relasenotes.md'
            artifact: ReleaseNotes-build
          - task: PublishMarkdownReports@1
            inputs:
              contentPath: '$(System.DefaultWorkingDirectory)'
              indexFile: 'relasenotes.md'
              headingId: buildnotes
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'github.com_syedhassanabbas'
              repositoryName: '$(Build.Repository.Name)' # string. Required. Repository. Default: $(Build.Repository.Name).
              action: 'create' # 'create' | 'edit' | 'delete'. Required. Action. Default: create.
              target: '$(Build.SourceVersion)' # string. Required when action = create || action = edit. Target. Default: $(Build.SourceVersion).
              tagSource: 'gitTag' # 'gitTag' | 'userSpecifiedTag'. Required when action = create. Tag source. Default: gitTag.
              tagPattern: 'v1.*' # string. Optional. Use when tagSource = gitTag. Tag Pattern. 
              tag: 'v1.11.18' # string. Required when action = edit || action = delete || tagSource = userSpecifiedTag. Tag. 
              title: 'v1.11.18' # string. Optional. Use when action = create || action = edit. Release title. 
              releaseNotesSource: 'filePath' # 'filePath' | 'inline'. Optional. Use when action = create || action = edit. Release notes source. Default: filePath.
              releaseNotesFilePath: '$(System.DefaultWorkingDirectory)/relasenotes.md' # string. Optional. Use when releaseNotesSource = filePath. Release notes file path. 
              #releaseNotesInline: # string. Optional. Use when releaseNotesSource = inline. Release notes. 
              #assets: '$(Build.ArtifactStagingDirectory)/*' # string. Optional. Use when action = create || action = edit. Assets. Default: $(Build.ArtifactStagingDirectory)/*.
              #assetUploadMode: 'delete' # 'delete' | 'replace'. Optional. Use when action = edit. Asset upload mode. Default: delete.
              isDraft: false # boolean. Optional. Use when action = create || action = edit. Draft release. Default: false.
              isPreRelease: false # boolean. Optional. Use when action = create || action = edit. Pre-release. Default: false.
              addChangeLog: true # boolean. Optional. Use when action = create || action = edit. Add changelog. Default: true.
            # Changelog configuration
              changeLogCompareToRelease: 'lastFullRelease' # 'lastFullRelease' | 'lastNonDraftRelease' | 'lastNonDraftReleaseByTag'. Required when addChangeLog = true. Compare to. Default: lastFullRelease.
              #changeLogCompareToReleaseTag: # string. Required when changeLogCompareToRelease = lastNonDraftReleaseByTag. Release Tag. 
              changeLogType: 'commitBased' # 'commitBased' | 'issueBased'. Required when addChangeLog = true. Changelog type. Default: commitBased.
              #changeLogLabels: '[{ "label" : "bug", "displayName" : "Bugs", "state" : "closed" }]' # string. Optional. Use when changeLogType = issueBased. Categories. Default: [{ "label" : "bug", "displayName" : "Bugs", "state" : "closed" }].
  - stage: Devv
    jobs:
      - deployment: DeployWeb
        displayName: deploy Web App
        pool: Default  
        environment: 'Devv'
        strategy:
          # default deployment strategy 
          runOnce:
            deploy:
              steps:
              - script: echo my Test deployment
              - template: generate-wiki-docs.yml
                parameters:
                  workingDirectory: '$(Agent.BuildDirectory)'
                  environmentName: "Devv"            
      #   - task: WikiUpdaterTask@1
      #   displayName: 'Git based WIKI Updater'
      #   inputs:
      #     repo: 'dev.azure.com/richardfennell/Git%20project/_git/Git-project.wiki'
      #     filename: 'xPlatReleaseNotes/build-Windows-handlebars.md'
      #     dataIsFile: true
      #     sourceFile: '$(System.DefaultWorkingDirectory)inline.md'
      #     message: 'Update from Build'
      #     gitname: builduser
      #     gitemail: 'build@demo'
      #     useAgentToken: true

      # - deployment: DeployWeb
      #   displayName: deploy Web App
      #   pool: Default
      #   environment: 'Devv'
      #   strategy:
      #     # default deployment strategy 
      #     runOnce:
      #       deploy:
      #         steps:
      #         - script: echo my Devv deployment
  - stage: Test
    jobs:
      - deployment: DeployWeb
        displayName: deploy Web App
        pool: Default        
        environment: 'Test'
        strategy:
          # default deployment strategy 
          runOnce:
            deploy:
              steps:
              - script: echo my Test deployment
              - template: generate-wiki-docs.yml
                parameters:
                  workingDirectory: '$(Agent.BuildDirectory)'
                  environmentName: "Test"
  - stage: Stag
    jobs:
      - deployment: DeployWeb
        displayName: deploy Web App
        pool: Default       
        environment: 'Stag'
        strategy:
          # default deployment strategy 
          runOnce:
            deploy:
              steps:
              - script: echo my Test deployment
              - template: generate-wiki-docs.yml
                parameters:
                  workingDirectory: '$(Agent.BuildDirectory)'
                  environmentName: "stag"
  - stage: Prod
    jobs:
      - deployment: DeployWeb
        displayName: deploy Web App
        pool: Default  
        environment: 'Prod'
        strategy:
          # default deployment strategy 
          runOnce:
            deploy:
              steps:
              - script: echo my Prod deployment
              - template: generate-wiki-docs.yml
                parameters:
                  workingDirectory: '$(Agent.BuildDirectory)'
                  environmentName: "Prod"
