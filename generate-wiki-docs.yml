parameters:
- name: workingDirectory    
  type: string
# - name: wikiFilename           
#   type: string
# - name: repo                   
#   type: string
# - name: GitName                   
#   type: string
# - name: GitEmail                   
#   type: string
# - name: GitHubPat                   
#   type: string
# - name: UserName
#   type: string
- name: environmentName
  type: string

steps:  
- task: XplatGenerateReleaseNotes@4
  displayName: 'Generate Release Notes'
  inputs:
    outputfile: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md'
    outputVariableName: OutputText
    templateLocation: InLine
    inlinetemplate: |
        # Notes for build
        **Build Number**: {{buildDetails.id}}
        **Build Trigger PR Number**: {{lookup buildDetails.triggerInfo 'pr.number'}}

        # Associated Pull Requests ({{pullRequests.length}})
        {{#forEach pullRequests}}
        {{#if isFirst}}### Associated Pull Requests (only shown if  PR) {{/if}}
        *  **PR {{this.id}}**  {{this.title}}
        {{/forEach}}

        ## Global list of ConsumedArtifacts ({{consumedArtifacts.length}})
        {{#forEach consumedArtifacts}}
        * {{json this}}
        {{/forEach}}

        # Builds with associated WI/CS ({{builds.length}})
        {{#forEach builds}}
        {{#if isFirst}}## Builds {{/if}}
        ##  Build {{this.build.buildNumber}}
        {{#forEach this.commits}}
        {{#if isFirst}}### Commits {{/if}}
        - CS {{this.id}}
        {{/forEach}}

        # Global list of WI with PRs, parents and children
        {{#forEach this.workItems}}
        {{#if isFirst}}### WorkItems {{/if}}
        *  **{{this.id}}**  {{lookup this.fields 'System.Title'}}
          - **WIT** {{lookup this.fields 'System.WorkItemType'}}
          - **Tags** {{lookup this.fields 'System.Tags'}}
          - **Assigned** {{#with (lookup this.fields 'System.AssignedTo')}} {{displayName}} {{/with}}
          - **Description** {{{lookup this.fields 'System.Description'}}}
          - **PRs**
        {{#forEach this.relations}}
        {{#if (contains this.attributes.name 'Pull Request')}}
        {{#with (lookup_a_pullrequest ../../pullRequests  this.url)}}
              - {{this.pullRequestId}} - {{this.title}}
        {{/with}}
        {{/if}}
        {{/forEach}}
          - **Parents**
        {{#forEach this.relations}}
        {{#if (contains this.attributes.name 'Parent')}}
        {{#with (lookup_a_work_item ../../relatedWorkItems  this.url)}}
              - {{this.id}} - {{lookup this.fields 'System.Title'}}
              {{#forEach this.relations}}
              {{#if (contains this.attributes.name 'Parent')}}
              {{#with (lookup_a_work_item ../../../../relatedWorkItems  this.url)}}
                - {{this.id}} - {{lookup this.fields 'System.Title'}}
              {{/with}}
              {{/if}}
              {{/forEach}}
        {{/with}}
        {{/if}}
        {{/forEach}}
          - **Children**
        {{#forEach this.relations}}
        {{#if (contains this.attributes.name 'Child')}}
        {{#with (lookup_a_work_item ../../relatedWorkItems  this.url)}}
              - {{this.id}} - {{lookup this.fields 'System.Title'}}
        {{/with}}
        {{/if}}
        {{/forEach}}
          - **Tested By**
        {{#forEach this.relations}}
        {{#if (contains this.attributes.name 'Tested By')}}
        {{#with (lookup_a_work_item ../../testedByWorkItems  this.url)}}
              - {{this.id}} - {{lookup this.fields 'System.Title'}}
        {{/with}}
        {{/if}}
        {{/forEach}}
        {{/forEach}}

        {{/forEach}}

        # Global list of WI ({{workItems.length}})
        {{#forEach workItems}}
        {{#if isFirst}}## Associated Work Items (only shown if  WI) {{/if}}
        *  **{{this.id}}**  {{lookup this.fields 'System.Title'}}
          - **WIT** {{lookup this.fields 'System.WorkItemType'}}
          - **Tags** {{lookup this.fields 'System.Tags'}}
        {{/forEach}}

        # WIQL list of WI ({{queryWorkItems.length}})
        {{#forEach queryWorkItems}}
        *  **{{this.id}}** {{lookup this.fields 'System.Title'}}
        {{/forEach}}

        {{#forEach commits}}
        {{#if isFirst}}### Associated commits{{/if}}
        * ** ID{{this.id}}**
          -  **Message:** {{this.message}}
          -  **Commited by:** {{this.author.displayName}}
          -  **FileCount:** {{this.changes.length}}
        {{#forEach this.changes}}
              -  **File path (TFVC or TfsGit):** {{this.item.path}}
              -  **File filename (GitHub):** {{this.filename}}
        {{/forEach}}
        {{/forEach}}
- publish: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md'
  artifact: ReleaseNotes-${{parameters.environmentName}}
- task: PublishMarkdownReports@1
  inputs:
    contentPath: '${{parameters.workingDirectory}}'
    indexFile: 'inline-${{parameters.environmentName}}.md'
    headingId: doxybook2
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_syedhassanabbas'
    repositoryName: '$(Build.Repository.Name)' # string. Required. Repository. Default: $(Build.Repository.Name).
    action: 'create' # 'create' | 'edit' | 'delete'. Required. Action. Default: create.
    target: '$(Build.SourceVersion)' # string. Required when action = create || action = edit. Target. Default: $(Build.SourceVersion).
    tagSource: 'gitTag' # 'gitTag' | 'userSpecifiedTag'. Required when action = create. Tag source. Default: gitTag.
    tagPattern: 'v1.*' # string. Optional. Use when tagSource = gitTag. Tag Pattern. 
    tag: 'v1.11.13' # string. Required when action = edit || action = delete || tagSource = userSpecifiedTag. Tag. 
    title: 'v1.11.13' # string. Optional. Use when action = create || action = edit. Release title. 
    releaseNotesSource: 'filePath' # 'filePath' | 'inline'. Optional. Use when action = create || action = edit. Release notes source. Default: filePath.
    releaseNotesFilePath: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md' # string. Optional. Use when releaseNotesSource = filePath. Release notes file path. 
    #releaseNotesInline: # string. Optional. Use when releaseNotesSource = inline. Release notes. 
    #assets: '$(Build.ArtifactStagingDirectory)/*' # string. Optional. Use when action = create || action = edit. Assets. Default: $(Build.ArtifactStagingDirectory)/*.
    #assetUploadMode: 'delete' # 'delete' | 'replace'. Optional. Use when action = edit. Asset upload mode. Default: delete.
    isDraft: false # boolean. Optional. Use when action = create || action = edit. Draft release. Default: false.
    isPreRelease: false # boolean. Optional. Use when action = create || action = edit. Pre-release. Default: false.
    addChangeLog: true # boolean. Optional. Use when action = create || action = edit. Add changelog. Default: true.
  # Changelog configuration
    changeLogCompareToRelease: 'lastFullRelease' # 'lastFullRelease' | 'lastNonDraftRelease' | 'lastNonDraftReleaseByTag'. Required when addChangeLog = true. Compare to. Default: lastFullRelease.
    #changeLogCompareToReleaseTag: # string. Required when changeLogCompareToRelease = lastNonDraftReleaseByTag. Release Tag. 
    changeLogType: 'commitBased' # 'commitBased' | 'issueBased'. Required when addChangeLog = true. Changelog type. Default: commitBased.
    #changeLogLabels: '[{ "label" : "bug", "displayName" : "Bugs", "state" : "closed" }]' # string. Optional. Use when changeLogType = issueBased. Categories. Default: [{ "label" : "bug", "displayName" : "Bugs", "state" : "closed" }].
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md'
    artifactType: 'pipeline'
    artifactName: ReleaseNotes-${{parameters.environmentName}}
# - task: richardfennellBM.BM-VSTS-YAMLGenerator-DEV.YamlGeneratorTask.GenerateYAMLTask@2
#   displayName: 'YAML Documentation Generator'
#   inputs:
#     inDir: '${{parameters.workingDirectory}}'     
#     outDir: '${{parameters.workingDirectory}}/out'
#     filePrefix: '${{parameters.wikiFilename}}'    
#     copyReadme: true

# - task: richardfennellBM.BM-VSTS-WIKIUpdater-Tasks-DEV.WikiUpdaterTask.WikiUpdaterTask@2
#   displayName: 'Git based WIKI Updater - Readme'
#   inputs:
#     repo: '${{parameters.repo}}'
#     filename: '${{parameters.wikiFilename}}.md'
#     dataIsFile: true
#     sourceFile: '${{parameters.workingDirectory}}/out/${{parameters.wikiFilename}}.md'
#     message: 'Update the ${{parameters.wikiFilename}} Release Notes Readme'
#     gitname: '${{parameters.GitName}}'
#     gitemail: '${{parameters.GitEmail}}'
#     user: '${{parameters.UserName}}'
#     password: '${{parameters.GitHubPat}}'

# - task: richardfennellBM.BM-VSTS-WIKIUpdater-Tasks-DEV.WikiUpdaterTask.WikiUpdaterTask@2
#   displayName: 'Git based WIKI Updater - YAML '
#   inputs:
#     repo: '${{parameters.repo}}'
#     filename: '${{parameters.wikiFilename}}-YAML.md'
#     dataIsFile: true
#     sourceFile: '${{parameters.workingDirectory}}/out/${{parameters.wikiFilename}}-YAML.md'
#     message: 'Update the ${{parameters.wikiFilename}} Release Notes YAML'
#     gitname: '${{parameters.GitName}}'
#     gitemail: '${{parameters.GitEmail}}'
#     user: '${{parameters.UserName}}'
#     password: '${{parameters.GitHubPat}}'
