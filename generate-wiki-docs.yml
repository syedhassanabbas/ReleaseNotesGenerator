parameters:
- name: workingDirectory    
  type: string
# - name: wikiFilename           
#   type: string
# - name: repo                   
#   type: string
# - name: GitName                   
#   type: string
# - name: GitEmail                   
#   type: string
# - name: GitHubPat                   
#   type: string
# - name: UserName
#   type: string
- name: environmentName
  type: string

steps:  
- task: XplatGenerateReleaseNotes@4
  displayName: 'Generate Release Notes'
  inputs:
    outputfile: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md'
    outputVariableName: OutputText
    checkstages: true
    templateLocation: InLine
    inlinetemplate: |
      **Build Number**: {{buildDetails.id}}
      **Build Trigger PR Number**: {{lookup buildDetails.triggerInfo 'pr.number'}}

      # Global list of WI ({{workItems.length}})
      {{#forEach workItems}}
      {{#if isFirst}}## Associated Work Items (only shown if  WI) {{/if}}
      *  **{{this.id}}**  {{lookup this.fields 'System.Title'}}
        - **WIT** {{lookup this.fields 'System.WorkItemType'}}
        - **Tags** {{lookup this.fields 'System.Tags'}}
      {{/forEach}}

      # Global list of CS ({{commits.length}})
      {{#forEach commits}}
      {{#if isFirst}}### Associated commits  (only shown if CS) {{/if}}
      * ** ID{{this.id}}**
        -  **Message:** {{this.message}}
        -  **Commited by:** {{this.author.displayName}}
      {{/forEach}}       
- publish: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md'
  artifact: ReleaseNotes-${{parameters.environmentName}}
- task: PublishMarkdownReports@1
  inputs:
    contentPath: '${{parameters.workingDirectory}}'
    indexFile: 'inline-${{parameters.environmentName}}.md'
    headingId: ${{parameters.environmentName}}releasenotes
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '${{parameters.workingDirectory}}/inline-${{parameters.environmentName}}.md'
    artifactType: 'pipeline'
    artifactName: ReleaseNotes-${{parameters.environmentName}}
# - task: richardfennellBM.BM-VSTS-YAMLGenerator-DEV.YamlGeneratorTask.GenerateYAMLTask@2
#   displayName: 'YAML Documentation Generator'
#   inputs:
#     inDir: '${{parameters.workingDirectory}}'     
#     outDir: '${{parameters.workingDirectory}}/out'
#     filePrefix: '${{parameters.wikiFilename}}'    
#     copyReadme: true

# - task: richardfennellBM.BM-VSTS-WIKIUpdater-Tasks-DEV.WikiUpdaterTask.WikiUpdaterTask@2
#   displayName: 'Git based WIKI Updater - Readme'
#   inputs:
#     repo: '${{parameters.repo}}'
#     filename: '${{parameters.wikiFilename}}.md'
#     dataIsFile: true
#     sourceFile: '${{parameters.workingDirectory}}/out/${{parameters.wikiFilename}}.md'
#     message: 'Update the ${{parameters.wikiFilename}} Release Notes Readme'
#     gitname: '${{parameters.GitName}}'
#     gitemail: '${{parameters.GitEmail}}'
#     user: '${{parameters.UserName}}'
#     password: '${{parameters.GitHubPat}}'

# - task: richardfennellBM.BM-VSTS-WIKIUpdater-Tasks-DEV.WikiUpdaterTask.WikiUpdaterTask@2
#   displayName: 'Git based WIKI Updater - YAML '
#   inputs:
#     repo: '${{parameters.repo}}'
#     filename: '${{parameters.wikiFilename}}-YAML.md'
#     dataIsFile: true
#     sourceFile: '${{parameters.workingDirectory}}/out/${{parameters.wikiFilename}}-YAML.md'
#     message: 'Update the ${{parameters.wikiFilename}} Release Notes YAML'
#     gitname: '${{parameters.GitName}}'
#     gitemail: '${{parameters.GitEmail}}'
#     user: '${{parameters.UserName}}'
#     password: '${{parameters.GitHubPat}}'
